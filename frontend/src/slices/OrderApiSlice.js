// Importing constants for API endpoints

import { ORDERS_URL } from "../constant";
import { PAYPAL_UrL } from "../constant";
import { apiSlice } from "./apiSlices";

// Importing a custom apiSlice from apiSlices file


// Creating an ordersApiSlice using the injectEndpoints function from apiSlice
export const ordersApiSlice = apiSlice.injectEndpoints({
   // Global configuration for the api
   refetchOnReconnect: true,
   endpoints: (builder) => ({
      // Configuration for creating an order
      createOrder: builder.mutation({
         query: (order) => ({
            url: ORDERS_URL,
            method: "POST",
            body: { ...order }
         }) 
      }),

      // Configuration for getting order details
      getOrderDetails: builder.query({
         query: (orderId) => ({
            url: `${ORDERS_URL}/${orderId}`
         }),
         keepUnusedDataFor: 5 // Keeping data for 5 minutes
      }),

      // Configuration for marking an order as paid
      payOrder: builder.mutation({
         query: ({ orderId, details }) => ({
            url: `${ORDERS_URL}/${orderId}/pay`,
            method: "PUT",
            body: { ...details }
         })
      }),

      // Configuration for getting PayPal client ID(fetching clientId from paypal Api)
      getPayPalClientId: builder.query({
         query: () => ({
            url: PAYPAL_UrL
         }),
         keepUnusedDataFor: 5 // Keeping data for 5 minutes
      }),
      getMyOrders:builder.query({
         query:()=>({
           url:`${ORDERS_URL}/mine`
           
         }),
         keepUnusedDataFor:5
      }),
      getOrders:builder.query({
         query:()=>({
            url:ORDERS_URL
         }), 
         keepUnusedDataFor:5
      }),
      deliverOrder:builder.mutation({
         query:(orderId)=>({
          url: `${ORDERS_URL}/${orderId}/deliver`,
          method:"PUT" 
         })
      })
   })
});

// Exporting specific hooks generated by ordersApiSlice for use in components
export const {
   useCreateOrderMutation,
   usePayOrderMutation,
   useGetPayPalClientIdQuery,
   useGetOrderDetailsQuery,
   useGetMyOrdersQuery, 
   useGetOrdersQuery,
    useDeliverOrderMutation
} = ordersApiSlice;
